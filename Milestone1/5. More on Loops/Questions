Output Question 1:
Answer : 1 3
Solution Description
The range() function returns a sequence of numbers, starting from 0 by default, and  increments by 1 (by default), and stops before a specified number.
Syntax : range(Lower Limit, Upper Limit, Step Value)
In this question, the step value is set to 2. It means for each iteration, ‘i’ will increase by 2.

Output Question 2:
Answer : 0 1 2 3 4
Solution Description
The range() function returns a sequence of numbers, starting from 0 by default, and  increments by 1 (by default), and stops before a specified number.
Syntax :  range(Lower Limit, Upper Limit, Step Value)
In this question, the step value is set to 2. It means for each iteration, ‘i’ will increase by 2.

Output Question 3:
Answer : 1 2
Solution Description
When “i” becomes equal to 3, the break statement will execute and the code will break out of the while loop without executing any further instructions.

Output Question 4:
Answer : 1 2 1 2
Solution Description
In a nested loop, a break statement only stops the loop it is placed in. Therefore, if a break is placed in the inner loop, the outer loop still continues. However, if the break is placed in the outer loop, all of the loopings stop.
So, in our example, the break statement only stops the inner loop and the outer loop continues to run.

Output Question 5:
Answer : 1 2 3 4 Else is also printed
Solution Description
The else block just after for/while is executed only when the loop is NOT terminated by a break statement.
In our example, the break statement will never hit because the value of “i” will not go above 5.

Output Question 6:
Answer : 1 2
Solution Description
The else block just after for/while is executed only when the loop is NOT terminated by a break statement.
In our example, the break statement will execute when “i” becomes equal to 3. So the else statement will not execute.

Output Question 7:
Answer : 1 2 Infinte Loop
Solution Description
The continue statement jumps out of the current iteration and forces the next iteration of the loop to take place.
In our example when the value of “i” becomes equal to 3 the continue statement will execute and the code again goes to while without executing the further statements. So the value of “i” will not increase and the while loop runs infinitely.

Output Question 8:
Answer : 1 2 4 5 1 2 4 5
Solution Description
When “j” becomes equal to 3 the code executes the continue statement and the control goes to the inner while loop. 
Hence that output is 1 2 4 5 1 2 4 5


I hope these answers help you. Thanks a lot. Please star this repository (from top right corner).
